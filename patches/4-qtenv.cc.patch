diff --git a/src/qtenv/qtenv.cc b/src/qtenv/qtenv.cc
index 90d2574038..435f16bef3 100644
--- a/src/qtenv/qtenv.cc
+++ b/src/qtenv/qtenv.cc
@@ -111,6 +111,13 @@ void initFontsResource()
     Q_INIT_RESOURCE(fonts);
 }
 
+#include <emscripten.h>
+#include <QtCore/QtPlugin>
+Q_IMPORT_PLUGIN(QWasmIntegrationPlugin)
+Q_IMPORT_PLUGIN(QGifPlugin)
+Q_IMPORT_PLUGIN(QICOPlugin)
+Q_IMPORT_PLUGIN(QJpegPlugin)
+
 namespace omnetpp {
 
 namespace qtenv {
@@ -844,7 +851,6 @@ void Qtenv::runSimulation(RunMode mode, simtime_t until_time, eventnumber_t unti
     doNextEventInStep = getSimulation()->isTrapOnNextEventRequested() || displayUpdateController->rightBeforeEvent();
 
     updateStatusDisplay();
-    QApplication::processEvents();
 
     startClock();
     notifyLifecycleListeners(LF_ON_SIMULATION_RESUME);
@@ -1708,25 +1714,16 @@ void Qtenv::initialSetUpConfiguration()
     }
     else {
         try {
-            // defaultConfig and runFilter are what were specified in either the omnetpp.ini file or as a command line argument
-            RunSelectionDialog dialog(conf, opt->defaultConfig, opt->runFilter, mainWindow);
-
-#ifdef QT_OS_MAC
-            // Makes the Apple Menu work on Mac (together with TransformProcessType) right
-            // after launch even if there is no need to actually pick a configuration.
-            // Even if the dialog doesn't really appear on the screen (in fact I hope it
-            // doesn't, that would cause flickering), if shown first, it will do some
-            // magic with window focus passing when destroyed, which is similar to
-            // switching apps, which then makes the global menu work for some reason.
-            dialog.show();
-#endif
-
-            // only show if needed, but if cancelled, stop.
-            if (dialog.needsShowing() && !dialog.exec())
-                return;
+            auto *dialog = new RunSelectionDialog(conf, opt->defaultConfig, opt->runFilter, mainWindow);
+            bool accepted = false;
+            connect(dialog, &RunSelectionDialog::accepted, [&](){ accepted = true; });
+            dialog->open();
+            while(!accepted) {
+                emscripten_sleep(10);
+            }
 
-            config = dialog.getConfigName();
-            run = dialog.getRunNumber();
+            config = dialog->getConfigName();
+            run = dialog->getRunNumber();
         }
         catch (std::exception& e) {
             // if nonexistent config was given as argument or the run filter couldn't be applied, etc...
